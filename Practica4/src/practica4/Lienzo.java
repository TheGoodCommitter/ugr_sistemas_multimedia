/*
 * Copyright (C) 2016 Ernesto Serrano <info at ernesto.es>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package practica4;

import java.awt.Graphics;
import java.awt.Point;

/**
 *
 * @author ernesto
 */
public class Lienzo extends javax.swing.JPanel {

    private Point clickPoint;
    private Point startPoint;
    private Point endPoint;
    
    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        
        this.endPoint = evt.getPoint();
        this.repaint();
        
    }//GEN-LAST:event_formMouseDragged

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
    
        this.clickPoint = evt.getPoint();
        this.repaint();
               
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed

        this.startPoint = evt.getPoint();
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased

        this.endPoint = evt.getPoint();        
        this.repaint();
    }//GEN-LAST:event_formMouseReleased

    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
     
        g.setColor(Config.getSelectedColor());
        
        //System.out.println("pinta");
        
        //g.drawRect(WIDTH, WIDTH, WIDTH, HEIGHT);
        

        
        int x, y, width, height; // Aqui almacenaremos las coordenadas
        
       
        switch (Config.getSelectedTool())
        {
            case POINT :
                
                if (this.clickPoint == null) break;
                g.fillOval(this.clickPoint.x - 5, this.clickPoint.y - 5, 10, 10);
                
                //g.drawOval(this.startPoint.x, this.startPoint.y, 10, 10);
                
                break;
                
            case LINE :
                
                if (this.startPoint == null) break;
                g.drawLine(this.startPoint.x, this.startPoint.y, this.endPoint.x, this.endPoint.y);
                //g.drawLine(this.startPoint.x, this.startPoint.y,this.endPoint.x-this.startPoint.x, this.endPoint.y - this.startPoint.y);

                
                break;

            case RECTANGLE :

                if (this.startPoint == null) break;
                x = Math.min(this.startPoint.x, this.endPoint.x);
                y = Math.min(this.startPoint.y, this.endPoint.y);
                width = Math.abs(this.startPoint.y - this.endPoint.y);
                height = Math.abs(this.startPoint.x - this.endPoint.x);
                if (Config.getFillColor()) {
                    g.fillRect(x, y, height, width);
                    break;
                }
                g.drawRect(x, y, height, width);
                //g.drawRect(this.startPoint.x, this.startPoint.y,this.endPoint.x-this.startPoint.x, this.endPoint.y - this.startPoint.y);

                break;
                
                
            case ELLIPSE :
                if (this.startPoint == null) break;
                x = Math.min(this.startPoint.x, this.endPoint.x);
                y = Math.min(this.startPoint.y, this.endPoint.y);
                width = Math.abs(this.startPoint.y - this.endPoint.y);
                height = Math.abs(this.startPoint.x - this.endPoint.x);
                if (Config.getFillColor()) {
                    g.fillOval(x, y, height, width);
                    break;
                }
                g.drawOval(x, y, height, width);

                //g.drawOval(this.startPoint.x, this.startPoint.y,this.endPoint.x-this.startPoint.x, this.endPoint.y - this.startPoint.y);
                break;
                
        }
        
       
        //System.out.println("hola");
    
    
    }

    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
